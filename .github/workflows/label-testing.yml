# Apply the 'testing' label to new issues

name: Label Testing Issues
on:
  issues:
    types:
      - opened
permissions:
  issues: write
jobs:
  add_testing_label:
    runs-on: ubuntu-latest
    steps:
    - name: Get Data
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ORGANIZATION: dotnet
        REPOSITORY: fabricbot-config
        LABEL_NAME: testing
        ISSUE_NUMBER: ${{ github.event.issue.number }}
      run: |
        gh api graphql -f query='
          query($org: String!, $repo: String!, $issue: Int!, $label: String!) {
            repository(name: $repo, owner: $org) {
              label(name: $label) {
                id
              }
              issue(number: $issue) {
                title
              }
            }
          }' -f org=$ORGANIZATION -f repo=$REPOSITORY -F issue=$ISSUE_NUMBER -f label="$LABEL_NAME" > data.json
        
        cat data.json
        echo 'LABEL_ID='$(jq -r '.data.repository.label.id' data.json) >> $GITHUB_ENV
        echo 'ISSUE_TITLE='$(jq -r '.data.repository.issue.title' data.json) >> $GITHUB_ENV
      
    - name: Apply Label
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ISSUE_ID: ${{ github.event.issue.node_id }}
      if: ${{ env.LABEL_ID != '' && env.LABEL_ID != 'null' }}
      run: |
        gh api graphql -f query='
         mutation($issue: ID!, ID!) {
           addLabelsToLabelable(input: {labelableId: $issue, labelIds: [$label]}) {
             clientMutationId
           }
         }' -f issue=$ISSUE_ID -f label=$LABEL_ID
